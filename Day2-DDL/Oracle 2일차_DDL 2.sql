SHOW USER;



CREATE TABLE JOB(
    JOB_CODE CHAR(2) NOT NULL,
    JOB_NAME VARCHAR2(35)
);

COMMENT ON COLUMN JOB.JOB_CODE IS '직급코드';
COMMENT ON COLUMN JOB.JOB_NAME IS '직급명';

SELECT * FROM JOB;






CREATE TABLE DEPARTMENT(
    DEPT_ID CHAR(2) NOT NULL,
    DEPT_TITLE VARCHAR2(35),
    LOCATION_ID CHAR(2) NOT NULL
);

COMMENT ON COLUMN DEPARTMENT.DEPT_ID IS '부서코드';
COMMENT ON COLUMN DEPARTMENT.DEPT_TITLE IS '부서명';
COMMENT ON COLUMN DEPARTMENT.LOCATION_ID IS '지역코드';





CREATE TABLE EMPLOYEE(
    EMP_ID VARCHAR2(3) NOT NULL,
    EMP_NAME VARCHAR2(20) NOT NULL,
    EMP_NO CHAR(14) NOT NULL,
    EMAIL VARCHAR2(25),
    PHONE VARCHAR2(12),
    DEPT_CODE CHAR(2) ,
    JOB_CODE CHAR(2) NOT NULL,
    SAL_LEVEL CHAR(2) NOT NULL,
    SALARY NUMBER,
    BONUS NUMBER,
    MANAGER_ID VARCHAR2(3),
    HIRE_DATE DATE,
    ENT_DATE DATE,
    ENT_YN CHAR(1) DEFAULT 'N'
);

COMMENT ON COLUMN EMPLOYEE.EMP_ID IS '사원번호';
COMMENT ON COLUMN EMPLOYEE.EMP_NAME IS '직원명';
COMMENT ON COLUMN EMPLOYEE.EMP_NO IS '주민등록번호';
COMMENT ON COLUMN EMPLOYEE.EMAIL IS '이메일';
COMMENT ON COLUMN EMPLOYEE.PHONE IS '전화번호';
COMMENT ON COLUMN EMPLOYEE.DEPT_CODE IS '부서코드';
COMMENT ON COLUMN EMPLOYEE.JOB_CODE IS '직급코드';
COMMENT ON COLUMN EMPLOYEE.SAL_LEVEL IS '급여등급';
COMMENT ON COLUMN EMPLOYEE.SALARY IS '급여';
COMMENT ON COLUMN EMPLOYEE.BONUS IS '보너스율';
COMMENT ON COLUMN EMPLOYEE.MANAGER_ID IS '관리자사번';
COMMENT ON COLUMN EMPLOYEE.HIRE_DATE IS '입사일';
COMMENT ON COLUMN EMPLOYEE.ENT_DATE IS '퇴사일';
COMMENT ON COLUMN EMPLOYEE.ENT_YN IS '퇴직여부';


-- 200, 선동일, 621231-1986634, sun-di@kh.or.kr, 01099546325
-- D9, J1, S1, 8000000, 0.3, X, 2013/02/06, X, N

--날자 형식의 데이터를 써줄 때는 문자열 처럼 ''로 감싸두자
INSERT INTO EMPLOYEE
VALUES(200, '선동일', '621231-1986634', 'sun-di@kh.or.kr', '01099546325', 'D9', 'J1', 'S1', 8000000, 0.3, NULL, '2013/02/06', NULL, DEFAULT);

SELECT * FROM EMPLOYEE WHERE EMP_ID = '200';




-- kh violet
-- ALTER (오라클 객체)
-- ALTER를 이용한 제약조건 추가, 수정, 이름변경
-- ALTER를 이용한 컬럼 추가, 컬럼데이터타입 수정, 컬럼명 수정, 컬럼 삭제, 테이블명 수정
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'EMPLOYEE';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'DEPARTMENT';
-- ** CONSTRAINT TYPE
-- P : PRIMARY KEY
-- R(F:테이블 기술서 작성 시) : FOREIGN KEY
-- C : CHECK OR NOT NULL
-- U : UNIQUE




-------------------------------------------------------------------------------------------------------



-- 1. TABLE USER_FOREIGN_KEY 삭제
-- 2. TABLE USER_GRADE가 삭제, 컬럼 레벨로 설정한 제약조건 모두 제거(DEFAULT 제외)
-- 3. TABLE USER_GRADE를 새로 생성
-- 4. TABLE USER_FOREIGN_KEY를 새로 생성
-- 5. ALTER라는 명령어로 제약조건을 추가하고 싶음, 테이블과 관련된 것을 수정하고 싶음
-- 6. 

CREATE TABLE USER_GRADE(
    GRADE_CODE NUMBER PRIMARY KEY,
    GRADE_NAME VARCHAR2(30) NOT NULL
);


SELECT * FROM USER_GRADE;
--DELETE FROM USER_GRADE;
INSERT INTO USER_GRADE VALUES(10, '일반회원');
INSERT INTO USER_GRADE VALUES(20, '우수회원');
INSERT INTO USER_GRADE VALUES(30, '특별회원');
INSERT INTO USER_GRADE VALUES(40, 'VIP 회원');

DROP TABLE USER_GRADE;


CREATE TABLE USER_FOREIGN_KEY(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PWD VARCHAR2(30),
    USER_NAME VARCHAR2(30),
    USER_GENDER VARCHAR2(10), 
    USER_PHONE VARCHAR2(30),
    USER_EMAIL VARCHAR2(50),
    USER_DATE DATE DEFAULT SYSDATE,
    GRADE_CODE NUMBER
);

DROP TABLE USER_FOREIGN_KEY;

SELECT * FROM USER_FOREIGN_KEY;

-- USER_FOREIGN_KEY에 있는 GRADE_CODE는 USER_GRADE의 GRADE_CODE가 가지고있는 10, 20, 30만 넣어야 한다
-- 10, 20, 30 외의 값인 40은 입력 불가능!
INSERT INTO USER_FOREIGN_KEY
VALUES(1, 'khuser01', 'pw01', '일용자', 'M', '01012345678', 'khuser01@test.com', DEFAULT, 10);
INSERT INTO USER_FOREIGN_KEY
VALUES(2, 'khuser02', 'pw02', '이용자', 'M', '01012345678', 'khuser02@test.com', DEFAULT, 20);
INSERT INTO USER_FOREIGN_KEY
VALUES(3, 'khuser03', 'pw03', '삼용자', 'M', '01012345678', 'khuser03@test.com', DEFAULT, 30);
INSERT INTO USER_FOREIGN_KEY
VALUES(4, 'khuser04', 'pw04', '사용자', 'M', '01012345678', 'khuser04@test.com', DEFAULT, 40);








DESC USER_GRADE;
-- 1. 테이블에 컬럼 추가
-- 2. 테이블에 컬럼 삭제
-- 3. 테이블의 컬럼데이터타입 수정
-- 4. 테이블의 컬럼명 수정
-- 5. 테이블명 수정


-- 1. 테이블에 컬럼 추가
ALTER TABLE USER_GRADE
ADD GRADE_DATE DATE;

-- 2. 테이블에 컬럼 삭제
ALTER TABLE USER_GRADE
DROP COLUMN GRADE_DATE;
DESC USER_GRADE;

SELECT * FROM USER_GRADE;

-- 3. 테이블의 컬럼데이터타입 수정
ALTER TABLE USER_GRADE
MODIFY GRADE_NAME CHAR(12);

-- 4. 테이블의 컬럼명 수정
ALTER TABLE USER_GRADE
ADD GRADE_DATE DATE;
ALTER TABLE USER_GRADE
RENAME COLUMN GRADE_DATE TO REG_DATE;

-- 5. 테이블명 수정
ALTER TABLE USER_GRADE
RENAME TO GRADE_TBL;

SELECT * FROM USER_GRADE;
SELECT * FROM GRADE_TBL;

RENAME GRADE_TBL TO USER_GRADE;



-- 제약조건과 ALTER
-- 1. 제약조건 추가
-- 2. 제약조건 삭제
-- 3. 제약조건 수정


-- 1. 제약조건 추가
ALTER TABLE USER_GRADE
ADD CONSTRAINT PK_GRADE_CODE PRIMARY KEY(GRADE_CODE);
-- SYS_C007114 -> PG_GRADE_CODE

ALTER TABLE USER_FOREIGN_KEY
ADD CONSTRAINT FK_GRADE_CODE FOREIGN KEY(GRADE_CODE) REFERENCES USER_GRADE(GRADE_CODE);

-- 2. 제약조건 삭제
ALTER TABLE USER_GRADE
DROP CONSTRAINT SYS_C007133;


---------------------------------------------------------------------------------------------


-- EX01) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼을 추가해주세요
-- EX02) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼을 삭제해주세요
-- EX03) USER_FOREIGN_KEY 테이블에 USER_DATE 컬럼의 자료형을 VARCHAR2(10)으로 바꿔주세요
-- EX04) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼의 이름을 REG_DATE로 변경해주세요
-- EX05) USER_FOREIGN_KEY 테이블의 이름을 USER_TBL로 바꿔주세요 (2가지)

--예제 진행을 위해 기존 예제의 테이블 삭제 후 다시 생성
DROP TABLE USER_TBL;
DROP TABLE USER_GRADE;

CREATE TABLE USER_GRADE(
    GRADE_CODE NUMBER PRIMARY KEY,
    GRADE_NAME VARCHAR2(30) NOT NULL
);

DROP TABLE USER_FOREIGN_KEY;

CREATE TABLE USER_FOREIGN_KEY(
    USER_NO NUMBER,
    USER_ID VARCHAR2(20),
    USER_PWD VARCHAR2(30),
    USER_NAME VARCHAR2(30),
    USER_GENDER VARCHAR2(10), 
    USER_PHONE VARCHAR2(30),
    USER_EMAIL VARCHAR2(50),
    GRADE_CODE NUMBER
);




--예제 시작 전 테이블 만들어뒀는지 체크!
SELECT * FROM USER_FOREIGN_KEY;
--테이블 구성 및 설정값 체크!
DESC USER_FOREIGN_KEY;


-- EX01) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼을 추가해주세요
ALTER TABLE USER_FOREIGN_KEY
ADD USER_DATE DATE;

-- EX02) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼을 삭제해주세요
ALTER TABLE USER_FOREIGN_KEY
DROP COLUMN USER_DATE;

-- EX03) USER_FOREIGN_KEY 테이블에 USER_DATE 컬럼의 자료형을 VARCHAR2(10)으로 바꿔주세요
ALTER TABLE USER_FOREIGN_KEY
MODIFY USER_DATE VARCHAR2(10);

-- EX04) USER_FOREIGN_KEY 테이블에 USER_DATE DATE 컬럼의 이름을 REG_DATE로 변경해주세요
ALTER TABLE USER_FOREIGN_KEY
RENAME COLUMN USER_DATE TO REG_DATE;

-- EX05) USER_FOREIGN_KEY 테이블의 이름을 USER_TBL로 바꿔주세요 (2가지)
ALTER TABLE USER_FOREIGN_KEY
RENAME TO USER_TBL;

--테이블명 변경되었는지 체크
SELECT * FROM USER_TBL;
DESC USER_TBL;